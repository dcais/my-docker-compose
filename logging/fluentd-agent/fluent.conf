# <source>
#   @type http
#   port 9980
# </source>
<system>
  root_dir /tmp/fluentd-buffers/
</system>

<source>
  @type tail
  @id tail_fauna_monitor
  @label @SQ_JAVALOG
  path /var/target/fauna/*.log
  exclude_path ["/var/target/fauna/*.*.log"]
  pos_file /var/target/fauna/fluent_tail.pos
  tag *
  read_from_head false
  <parse>
    @type regexp
    expression /^(?<log>.*)$/
    time_key logtime
    time_format %m-%d %H:%M:%S,%N
  </parse>
</source>


<label @SQ_JAVALOG>
  # <match raw.**>
  #   @type detect_exceptions
  #   @id sq_javalog_detect_exceptions
  #   remove_tag_prefix raw
  #   message log
  #   stream stream
  #   multiline_flush_interval 5
  #   max_bytes 500000
  #   max_lines 1000
  # </match>
  <match var.target.**>
    @type rewrite_tag_filter
    remove_tag_prefix var.target
    <rule>
      key     log
      pattern /^.*$/
      tag     ${tag}
    </rule>
  </match>

  <filter **>
    @id sq_javalog_filter_concat
    @type concat
    key log
    multiline_start_regexp /^\[/
    separator "\t"
    flush_interval 5
    timeout_label @SQ_JAVALOG_NORMAL
  </filter>

  <match **>
    @type relabel
    @id sq_javalog_relabel
    @label @SQ_JAVALOG_NORMAL
  </match>

</label>

<label @SQ_JAVALOG_NORMAL>
  <filter **>
    @type parser
    @id sq_javalog_normal_parser
    key_name log
    <parse>
      @type regexp
      expression /^\[(?<logtime>[^\]]*)\]\s+(?<level>[^\s]+)\s+\[(?<thread>[^\]]*)\]\[(?<ip>[^\]]*)\]\[(?<uid>[^\]]*)\]\[(?<opid>[^\]]*)\] (?<method>[^\[]*)\[(?<line>[^\]]*)\](?<message>.*)$/
      time_key logtime
      time_format %m-%d %H:%M:%S,%N
    </parse>
  </filter>

  <filter *.monitor>
    @type parser
    @id sq_javalog_monitor_parser
    key_name message
    reserve_time true
    reserve_data true
    emit_invalid_record_to_error false
    <parse>
      @type regexp
      expression /^\s+-\s+(?<response_interval>.*)ms\s+(?<response_status>.*)\s+(?<request_path>.*)$/
    </parse>
  </filter>

  <filter **>
    @type record_transformer
    @id sq_javalog_record_transformer
    <record>
      hostname "#{ENV["AGENT_HOST"]}"
      tag ${tag}
    </record>
  </filter>

  <filter sq.**>
    @type parser
    @id sq_javalog_tag_parser
    key_name tag
    reserve_time true
    reserve_data true
    <parse>
      @type regexp
      expression /^sq\.(?<application>[^\.]*?)\.(?<log_file>[^\.]*)[\.]?.*$/
    </parse>
  </filter>

  <filter **>
    @type stdout
    @id sq_javalog_debug_1
  </filter>
  <match **>
    @type null
    @id sq_javalog_stdout
  </match>

  # <match **>
  #   @type forward
  #   @id sq_javalog_forward
  #   send_timeout 60s
  #   recover_wait 10s
  #   hard_timeout 60s
  #   # keepalive true
  #   # keepalive_timeout 30
  #   <server>
  #     host "#{ENV["FORWARD_HOST"]}"
  #     port "#{ENV["FORWARD_PORT"]}"
  #   </server>
  #   <buffer>
  #     flush_interval 5
  #   </buffer>                           # 'Output Plugins' > 'Overview'.
  # </match>
</label>
# <filter **>
#   @type stdout
# </filter>
# Detect exceptions in the log output and forward them as one log entry 

# <match raw.**>
#   @type detect_exceptions
#   remove_tag_prefix raw
#   message log
#   multiline_flush_interval 5
#   max_bytes 500000
#   max_lines 1000
# </match>
# Concatenate multi-line logs

# <filter **>
#   @id filter_concat
#   @type concat
#   key message
#   multiline_end_regexp /\n$/
#   separator ""
# </filter>
# <filter **>
#   @id filter_concat
#   @type concat
#   key log
#   multiline_start_regexp /^\[/
#   separator "\t"
#   flush_interval 0
# </filter>

# <filter **>
#   @type stdout
# </filter>

# <filter sqmall.log4j.**>
#   @type parser
#   key_name log
#   <parse>
#     @type regexp
#     expression /^\[(?<logtime>[^\]]*)\]\s+(?<level>[^\s]+)\s+\[(?<thread>[^\]]*)\]\[(?<ip>[^\]]*)\]\[(?<uid>[^\]]*)\]\[(?<opid>[^\]]*)\] (?<method>[^\[]*)\[(?<line>[^\]]*)\](?<message>.*)$/
#     time_key logtime
#     time_format %m-%d %H:%M:%S,%N
#   </parse>
# </filter>

# <filter sqmall.log4j.fauna.monitor>
#   @type parser
#   key_name message
#   reserve_time true
#   reserve_data true
#   <parse>
#     @type regexp
#     expression /^\s+-\s+(?<response_interval>.*)ms\s+(?<response_status>.*)\s+(?<request_path>.*)$/
#     # time_key logtime
#     # time_format %m-%d %H:%M:%S,%N
#   </parse>
# </filter>



# <match **>
#   @type file
#   @id   output1
#   path         /fluentd/log/data.*.log
#   symlink_path /fluentd/log/data.log
#   append       true
#   time_slice_format %Y%m%d
#   time_slice_wait   10m
#   time_format       %Y%m%dT%H%M%S%z
# </match>